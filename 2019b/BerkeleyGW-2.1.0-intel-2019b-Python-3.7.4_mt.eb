name = 'BerkeleyGW'
version = '2.1.0'
versionsuffix = '-Python-%(pyver)s'

homepage = 'https://www.berkeleygw.org'
description = """The BerkeleyGW Package is a set of computer codes that calculates the quasiparticle
 properties and the optical responses of a large variety of materials from bulk periodic crystals to
 nanostructures such as slabs, wires and molecules."""

toolchain = {'name': 'intel', 'version': '2019b'}
toolchainopts = {'usempi': True, 'openmp': True, 'precise': True}

source_urls = ['https://berkeley.box.com/shared/static/']
sources = [{'download_filename': 'ze3azi5vlyw7hpwvl9i5f82kaiid6g0x.gz', 'filename': SOURCE_TAR_GZ}]
patches = [
    'BerkeleyGW-2.1.0_fix_path.patch',
    'BerkeleyGW-2.1.0_check.patch',
]
checksums = [
    '31f3b643dd937350c3866338321d675d4a1b1f54c730b43ad74ae67e75a9e6f2',  # BerkeleyGW-2.1.0.tar.gz
    '7a17fe7e6964e8a62ed2139dd940ce153741ac9f6ea6e6c0548c450f263fa834',  # BerkeleyGW-2.1.0_fix_path.patch
    '1e07ffc02ee4e4b70162c02b836af637e0bc3de9a7427fd612a899398c861f7e',  # BerkeleyGW-2.1.0_check.patch
]

dependencies = [
    ('ELPA', '2019.11.001'),
    ('Python', '3.7.4'),
    ('h5py', '2.10.0', versionsuffix),
]

# two tests failing (Si-EPM_subspace_cplx) with the intel toolchain... 
# runtest = False

moduleclass = 'phys'
